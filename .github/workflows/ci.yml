name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9.0.0
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Generate Prisma Client
      run: |
        cd apps/api
        pnpm db:generate
      env:
        DATABASE_URL: "postgresql://dummy:dummy@localhost:5432/dummy"
        
    - name: Build packages
      run: |
        pnpm --filter @palmera/tokens run build
        pnpm --filter @palmera/schemas run build  
        pnpm --filter @palmera/i18n run build
        pnpm --filter @palmera/ui run build
        pnpm --filter @palmera/sdk run build
      
    - name: Type check
      run: pnpm --filter "!@palmera/sdk" --filter "!@palmera/mobile" type-check
      
    - name: Lint
      run: pnpm lint
      
    - name: Run tests
      run: pnpm test
      env:
        DATABASE_URL: "postgresql://dummy:dummy@localhost:5432/dummy"
        NODE_ENV: "test"
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9.0.0
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build for production
      run: pnpm build
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        # Add your deployment commands here